// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace API.Migrations
{
    [DbContext(typeof(BibliotekaContext))]
    [Migration("20211222201624_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.Autor", b =>
                {
                    b.Property<int>("AutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AutorId")
                        .UseIdentityColumn();

                    b.Property<int>("GodinaRodjenja")
                        .HasColumnType("int")
                        .HasColumnName("GodinaRodjenja");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ime");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Prezime");

                    b.HasKey("AutorId");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("Models.Biblioteka", b =>
                {
                    b.Property<int>("BibliotekaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BibliotekaId")
                        .UseIdentityColumn();

                    b.Property<int>("BrojKnjiga")
                        .HasColumnType("int");

                    b.HasKey("BibliotekaId");

                    b.ToTable("Biblioteka");
                });

            modelBuilder.Entity("Models.Knjiga", b =>
                {
                    b.Property<int>("KnjigaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KnjigaId")
                        .UseIdentityColumn();

                    b.Property<int?>("AutorId")
                        .HasColumnType("int");

                    b.Property<int>("GodinaIzdavanja")
                        .HasColumnType("int")
                        .HasColumnName("GodinaIzdavanja");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Naziv");

                    b.Property<bool>("Procitano")
                        .HasColumnType("bit");

                    b.Property<int?>("ZanrId")
                        .HasColumnType("int");

                    b.HasKey("KnjigaId");

                    b.HasIndex("AutorId");

                    b.HasIndex("ZanrId");

                    b.ToTable("Knjiga");
                });

            modelBuilder.Entity("Models.Zanr", b =>
                {
                    b.Property<int>("ZanrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ZanrId")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZanrId");

                    b.ToTable("Zanr");
                });

            modelBuilder.Entity("Models.Knjiga", b =>
                {
                    b.HasOne("Models.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId");

                    b.HasOne("Models.Zanr", "Zanr")
                        .WithMany()
                        .HasForeignKey("ZanrId");

                    b.Navigation("Autor");

                    b.Navigation("Zanr");
                });
#pragma warning restore 612, 618
        }
    }
}
